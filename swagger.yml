swagger: '2.0'
info:
  title: 'HTTP API'
  version: 1.0.0
  description: 'The Binance Chain HTTP API provides access to a Binance Chain node deployment and market data services.'
  license:
    name: 'Apache 2.0'
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
basePath: /
schemes:
- https
# - wss
produces:
- application/json
tags:
-
  name: info
  description: 'Access to runtime metadata'
-
  name: account
  description: 'Access to an individual user''s trading activity'
-
  name: tx
  description: 'Access to transactions metadata'
-
  name: tokens
  description: 'Access to tokens metadata'
-
  name: market
  description: 'Access to DEX market data'
-
  name: order
  description: 'Access to historical orders'
-
  name: trade
  description: 'Access to historical trading activity'
-
  name: userdata
  description: 'Access to an individual user''s trading activity'
-
  name: node
  description: 'Access to the node RPC functions'
-
  name: frontier
  description: 'Access to the frontier services'
-
  name: misc
  description: Others
paths:
  /api/v1/time:
    get:
      tags:
      - misc
      summary: Get the block time.
      description: |
        Gets the latest block time and the current time according to the HTTP service.

        **Destination:** Validator node.

        **Rate Limit:** 1 request per IP per second.

        **Test URL:** [https://testnet-dex.binance.org/api/v1/time](https://testnet-dex.binance.org/api/v1/time)
      operationId: getTime
      produces:
      - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: "#/definitions/Times"
        '400':
          description: 'Bad Request'
          schema:
            $ref: "#/definitions/Error"
        '404':
          description: 'Not Found'
        default:
          description: Generic error response
          schema:
            $ref: "#/definitions/Error"
  /api/v1/node-info:
    get:
      summary: Get node information.
      description: |
        Gets runtime information about the node.

        **Destination:** Validator node.

        **Rate Limit:** 1 request per IP per second.

        **Test URL:** [https://testnet-dex.binance.org/api/v1/node-info](https://testnet-dex.binance.org/api/v1/node-info)
      operationId: getNodeInfo
      produces:
      - application/json
      tags:
      - info
      - node
      responses:
        '200':
          description: Success
          schema:
            type: object
            title: 'Node info'
            description: 'Represents block height, current timestamp and the number of connected peers.'
  /api/v1/validators:
    get:
      summary: Get validators.
      description: |
        Gets the list of validators used in consensus.

        **Destination:** Witness node.

        **Rate Limit:** 10 requests per IP per second.

        **Test URL:** [https://testnet-dex.binance.org/api/v1/validators](https://testnet-dex.binance.org/api/v1/validators)
      operationId: getValidators
      produces:
      - application/json
      tags:
      - info
      - node
      responses:
        '200':
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/Validator'
        '400':
          description: 'Bad Request'
          schema:
            $ref: "#/definitions/Error"
        '404':
          description: 'Not Found'
        default:
          description: Generic error response
          schema:
            $ref: "#/definitions/Error"
  /api/v1/peers:
    get:
      summary: Get network peers.
      description: |
        Gets the list of network peers.

        **Destination:** Witness node.

        **Rate Limit:** 1 request per IP per second.

        **Test URL:** [https://testnet-dex.binance.org/api/v1/peers](https://testnet-dex.binance.org/api/v1/peers)
      operationId: getPeers
      produces:
      - application/json
      tags:
      - info
      - node
      responses:
        '200':
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/Peer'
        '400':
          description: 'Bad Request'
          schema:
            $ref: "#/definitions/Error"
        '404':
          description: 'Not Found'
        default:
          description: Generic error response
          schema:
            $ref: "#/definitions/Error"
  /api/v1/account/{address}:
    get:
      summary: Get an account.
      description: |
        Gets account metadata for an address.

        **Destination:** Witness node.

        **Rate Limit:** 5 requests per IP per second.

        **Test URL:** [https://testnet-dex.binance.org/api/v1/account/tbnb185tqzq3j6y7yep85lncaz9qeectjxqe5054cgn](https://testnet-dex.binance.org/api/v1/account/tbnb185tqzq3j6y7yep85lncaz9qeectjxqe5054cgn)
      operationId: getAccount
      produces:
      - application/json
      tags:
      - node
      - account
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Account'
        '400':
          description: 'Bad Request'
          schema:
            $ref: "#/definitions/Error"
        '404':
          description: 'Not Found'
        default:
          description: Generic error response
          schema:
            $ref: "#/definitions/Error"
      parameters:
      -
        name: address
        in: path
        description: 'The account address to query'
        required: true
        type: string
  /api/v1/account/{address}/sequence:
    get:
      summary: Get an account sequence.
      description: |
        Gets an account sequence for an address.

        **Destination:** Validator node.

        **Rate Limit:** 5 requests per IP per second.

        **Test URL:** [https://testnet-dex.binance.org/api/v1/account/tbnb185tqzq3j6y7yep85lncaz9qeectjxqe5054cgn/sequence](https://testnet-dex.binance.org/api/v1/account/tbnb185tqzq3j6y7yep85lncaz9qeectjxqe5054cgn/sequence)
      operationId: getAccountSequence
      produces:
      - application/json
      tags:
      - node
      - account
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AccountSequence'
        '400':
          description: 'Bad Request'
          schema:
            $ref: "#/definitions/Error"
        '404':
          description: 'Not Found'
        default:
          description: Generic error response
          schema:
            $ref: "#/definitions/Error"
      parameters:
      -
        name: address
        in: path
        description: 'The account address to query'
        required: true
        type: string
  /api/v1/tx/{hash}:
    get:
      summary: Get a transaction.
      description: |
        Gets transaction metadata by transaction ID.

        **Destination:** Seed node.

        **Rate Limit:** 10 requests per IP per second.

        **Example:**
        If `format` is not provided or `format` is not `json`, the response should look like:
        ```
        {
            data: "Tx{DD01F0625DEE0A65CE6DC0430A148672775CD0C8EA51364B5231FD9A63893B55FF82122B383637323737354344304338454135313336344235323331464439413633383933423535464638322D32391A0D4144412E422D4632465F424E422002280230E0891C3880C2D72F4001126E0A26EB5AE98721034C8D7630EAB6CF86963D0CFBAFBC01A4E78841334A740726BCBC4E531957B0D7124053C0B41B7FAD40BD1B25E592A20B7D95A871975A209A9AB5D156717B7BCE36F66495D23705B253A7C63781E17E0EC17D2D6AB809C37E29BBA0F1468200D7C4231818201C2003}",
            hash: "E81BAB8E555819E4211D62E2E536B6D5812D3D91C105F998F5C6EB3AB8136482",
            log: "Msg 0: ",
            ok: true
        }
        ```

        If `format` is `json`, the response should look like:
        ```
         {
             "hash": "E81BAB8E555819E4211D62E2E536B6D5812D3D91C105F998F5C6EB3AB8136482",
             "height": "754",
             "tx": {
                 "type": "auth/StdTx", // fixed, type of transaction
                 "value": {            // fixed, detail of the transaction
                     "data": null,     // fixed, data of the transaction
                     "memo": "",       // fixed, memo
                     "msg": [          // fixed, msgs of the transaction
                         {
                             "type": "cosmos-sdk/Send",  // vary with msg type
                             "value": {                  // value content vary with mst type
                                 "inputs": [
                                     {
                                         "address": "bnb1vt4zwu5hy7tyryktud6mpcu8h2ehh6xw66gzwp",
                                         "coins": [
                                             {
                                                 "amount": "100000000000000",
                                                 "denom": "BNB"
                                             }
                                         ]
                                     }
                                 ],
                                 "outputs": [
                                     {
                                         "address": "bnb1kg8mh20tndur9d9rry4wjunhpfzcud30qzf0qv",
                                         "coins": [
                                             {
                                                 "amount": "100000000000000",
                                                 "denom": "BNB"
                                             }
                                         ]
                                     }
                                 ]
                             }
                         }
                     ],
                     "signatures": [ // fixed, signatures of the transaction
                         {
                             "account_number": "0",
                             "pub_key": {
                                 "type": "tendermint/PubKeySecp256k1",
                                 "value": "AoWY3eWBOnnvLPTz4RsUlX1pWCkLLPewu1vAAoTEzxzR"
                             },
                             "sequence": "1",
                             "signature": "6O2TQAgleFNPw4zIWBLaNvOf5dR7DHNSr2DwAPeFK6lokRqZd2KR2BD+WlmaWj4LdLo5N+utN1JtY41E91N0uw=="
                         }
                     ],
                     "source": "0"  // fixed, source of the transaction
                 }
             }
         }
         ```
      operationId: getTransaction
      produces:
      - application/json
      tags:
      - node
      - tx
      parameters:
      -
        name: hash
        in: path
        description: 'The transaction hash to query'
        required: true
        type: string
      - in: query
        name: format
        description: format of tx, if provided, will return specific format of tx, only support `json` (optional)
        required: false
        type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Transaction'
        '400':
          description: 'Bad Request'
          schema:
            $ref: "#/definitions/Error"
        '404':
          description: 'Not Found'
        default:
          description: Generic error response
          schema:
            $ref: "#/definitions/Error"
  /api/v1/tokens:
    get:
      tags:
      - tokens
      summary: Get tokens list.
      description: |
        Gets a list of tokens that have been issued.

        **Destination:** Witness node.

        **Rate Limit:** 1 request per IP per second.

        **Test URL:** [https://testnet-dex.binance.org/api/v1/tokens](https://testnet-dex.binance.org/api/v1/tokens)
      operationId: getTokens
      produces:
      - application/json
      responses:
        '200':
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/Token'
        '400':
          description: 'Bad Request'
          schema:
            $ref: "#/definitions/Error"
        '404':
          description: 'Not Found'
        default:
          description: Generic error response
          schema:
            $ref: "#/definitions/Error"
  /api/v1/markets:
    get:
      tags:
      - market
      summary: Get market pairs.
      description: |
        Gets the list of market pairs that have been listed.

        **Destination:** Witness node.

        **Rate Limit:** 1 request per IP per second.

        **Test URL:** [https://testnet-dex.binance.org/api/v1/markets](https://testnet-dex.binance.org/api/v1/markets)
      operationId: getPairs
      produces:
      - application/json
      responses:
        '200':
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/Market'
        '400':
          description: 'Bad Request'
          schema:
            $ref: "#/definitions/Error"
        '404':
          description: 'Not Found'
        default:
          description: Generic error response
          schema:
            $ref: "#/definitions/Error"
  /api/v1/fees:
    get:
      summary: Obtain trading fees information.
      description: |
        Gets the current trading fees settings.

        **Destination:** Witness node.

        **Rate Limit:** 1 request per IP per second.

        **Test URL:** [https://testnet-dex.binance.org/api/v1/fees](https://testnet-dex.binance.org/api/v1/fees)
      operationId: getFees
      produces:
        - application/json
      tags:
        - info
        - market
      responses:
        '200':
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/Fee'
        default:
          description: Generic error response
          schema:
            $ref: "#/definitions/Error"
  /api/v1/depth:
    get:
      tags:
      - market
      summary: Get the order book.
      description: |
        Gets the order book depth data for a given pair symbol.

        The given _limit_ must be one of the allowed limits below.

        **Destination:** Validator node.

        **Rate Limit:** 10 requests per IP per second.

        **Test URL:** [https://testnet-dex.binance.org/api/v1/depth?symbol=xxx-000_BNB](https://testnet-dex.binance.org/api/v1/depth?symbol=xxx-000_BNB)
      operationId: getDepth
      produces:
      - application/json
      parameters:
      -
        in: query
        name: symbol
        description: Market pair symbol, e.g. NNB-0AD_BNB
        required: true
        type: string
      -
        in: query
        name: limit
        description: "The limit of results. Allowed limits: [5, 10, 20, 50, 100, 500, 1000]"
        required: false
        type: integer
        format: int32
        enum:
          - 5
          - 10
          - 20
          - 50
          - 100
          - 500
          - 1000
      responses:
        '200':
          description: Success
          schema:
            $ref: "#/definitions/MarketDepth"
        '400':
          description: 'Bad Request'
          schema:
            $ref: "#/definitions/Error"
        '404':
          description: 'Not Found'
        default:
          description: Generic error response
          schema:
            $ref: "#/definitions/Error"
  /api/v1/broadcast:
    post:
      tags:
      - node
      operationId: broadcastTx
      summary: Broadcast a transaction.
      description: |
        Broadcasts a signed transaction. A single transaction must be sent hex-encoded with a `content-type` of `text/plain`.

        **Destination:** Witness node.

        **Rate Limit:** 5 requests per IP per second.

        **Test URL:** [https://testnet-dex.binance.org/api/v1/broadcast](https://testnet-dex.binance.org/api/v1/broadcast)
      consumes:
      - text/plain
      produces:
      - application/json
      schemes:
      - https
      parameters:
      - in: query
        name: sync
        description: |
          Synchronous broadcast (wait for [DeliverTx](https://github.com/tendermint/tendermint/wiki/Application-Developers#delivertx))?
        required: false
        type: boolean
        default: false
      - in: body
        name: body
        required: true
        schema:
          type: string
          format: binary
          minLength: 1
          maxLength: 100000
      responses:
        '200':
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/Transaction'
        '400':
          description: 'Bad Request'
          schema:
            $ref: "#/definitions/Error"
        '404':
          description: 'Not Found'
        default:
          description: Generic error response
          schema:
            $ref: "#/definitions/Error"
  /api/v1/klines:
    get:
      tags:
      - market
      summary: Get candlestick bars.
      description: |
        Gets candlestick/kline bars for a symbol. Bars are uniquely identified by their open time.

        **Rate Limit:** 10 requests per IP per second.

        **Test URL:** [https://testnet-dex.binance.org/api/v1/klines?symbol=NNB-338_BNB&interval=5m](https://testnet-dex.binance.org/api/v1/klines?symbol=NNB-338_BNB&interval=5m)

        **Example**

        ```
        [
          1499040000000,      // Open time
          "0.01634790",       // Open
          "0.80000000",       // High
          "0.01575800",       // Low
          "0.01577100",       // Close
          "148976.11427815",  // Volume
          1499644799999,      // Close time
          "2434.19055334",    // Quote asset volume
          308                // Number of trades
        ]
        ```
      operationId: getCandlestickBars
      produces:
      - application/json
      parameters:
      - name: symbol
        in: query
        description: symbol
        required: true
        type: string
      - name: interval
        in: query
        description: "interval. Allowed value: [1m, 3m, 5m, 15m, 30m, 1h, 2h, 4h, 6h, 8h, 12h, 1d, 3d, 1w, 1M]"
        required: true
        type: string
        allowEmptyValue: false
        enum:
        - 1m
        - 3m
        - 5m
        - 15m
        - 30m
        - 1h
        - 2h
        - 4h
        - 6h
        - 8h
        - 12h
        - 1d
        - 3d
        - 1w
        - 1M
      - name: limit
        in: query
        description: default 300; max 1000.
        required: false
        type: integer
        format: int32
        allowEmptyValue: false
      - name: startTime
        in: query
        description: start time
        required: false
        type: integer
        format: int64
        allowEmptyValue: false
      - name: endTime
        in: query
        description: end time
        required: false
        type: integer
        format: int64
        allowEmptyValue: false
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Candlestick'
            example: ' [[

                              1499040000000,      // Open time

                              "0.01634790",       // Open

                              "0.80000000",       // High

                              "0.01575800",       // Low

                              "0.01577100",       // Close

                              "148976.11427815",  // Volume

                              1499644799999,      // Close time

                              "2434.19055334",    // Quote asset volume

                              308                // Number of trades

                      ]] '
      deprecated: false
  /api/v1/orders/closed:
    get:
      tags:
      - order
      summary: Get closed orders.
      description: |
        Gets closed (filled and cancelled) orders for a given address.

        **Rate Limit:** 5 requests per IP per second.
      operationId: getClosedOrders
      produces:
      - application/json
      parameters:
      - name: address
        in: query
        description: the owner address
        required: true
        type: string
        allowEmptyValue: false
      - name: end
        in: query
        description: end time
        required: false
        type: integer
        format: int64
        allowEmptyValue: false
      - name: limit
        in: query
        description: default 500; max 1000.
        required: false
        type: integer
        default: 500
        format: int32
        allowEmptyValue: false
      - name: offset
        in: query
        description: start with 0; default 0.
        required: false
        type: integer
        default: 0
        format: int32
        allowEmptyValue: false
      - name: side
        in: query
        description: order side. 1 for buy and 2 for sell.
        required: false
        type: integer
        format: int32
        allowEmptyValue: false
        enum:
        - BUY
        - SELL
      - name: start
        in: query
        description: start time; The maximum start - end query window is 3 months; Default query window is latest 7 days.
        required: false
        type: integer
        format: int64
        allowEmptyValue: false
      - name: status
        in: query
        description: "order status list. Allowed value: [Ack, PartialFill, IocNoFill, FullyFill, Canceled, Expired, FailedBlocking, FailedMatching]"
        required: false
        type: array
        items:
          type: string
        collectionFormat: multi
        allowEmptyValue: false
      - name: symbol
        in: query
        description: symbol
        required: false
        type: string
      - name: total
        in: query
        description: 'total number required, 0 for not required and 1 for required; default not required, return total=-1 in response'
        required: false
        type: integer
        format: int32
        allowEmptyValue: false
        enum:
        - 0
        - 1
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OrderList'
      deprecated: false
  /api/v1/orders/open:
    get:
      tags:
      - order
      summary: Get open orders.
      description: |
        Gets open orders for a given address.

        **Rate Limit:** 5 requests per IP per second.
      operationId: getOpenOrders
      produces:
      - application/json
      parameters:
      - name: address
        in: query
        description: the owner address
        required: true
        type: string
        allowEmptyValue: false
      - name: limit
        in: query
        description: default 500; max 1000.
        required: false
        type: integer
        default: 500
        format: int32
        allowEmptyValue: false
      - name: offset
        in: query
        description: start with 0; default 0.
        required: false
        type: integer
        default: 0
        format: int32
        allowEmptyValue: false
      - name: symbol
        in: query
        description: symbol
        required: false
        type: string
      - name: total
        in: query
        description: 'total number required, 0 for not required and 1 for required; default not required, return total=-1 in response'
        required: false
        type: integer
        format: int32
        allowEmptyValue: false
        enum:
        - 0
        - 1
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OrderList'
        '400':
          description: 'Bad Request'
          schema:
            $ref: "#/definitions/Error"
        '404':
          description: 'Not Found'
        default:
          description: Generic error response
          schema:
            $ref: "#/definitions/Error"
      deprecated: false
  /api/v1/orders/{id}:
    get:
      tags:
      - order
      summary: Get an order.
      description: |
        Gets metadata for an individual order by its ID.

        **Rate Limit:** 5 requests per IP per second.
      operationId: getOrder
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: order id
        required: true
        type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Order'
        '400':
          description: 'Bad Request'
          schema:
            $ref: "#/definitions/Error"
        '404':
          description: 'Not Found'
        default:
          description: Generic error response
          schema:
            $ref: "#/definitions/Error"
      deprecated: false
  /api/v1/ticker/24hr:
    get:
      tags:
      - market
      summary: Get a market ticker.
      description: |
        Gets 24 hour price change statistics for a market pair symbol.

        **Rate Limit:** 5 requests per IP per second.
      operationId: get24HrPriceStatistics
      produces:
      - application/json
      parameters:
      - name: symbol
        in: query
        description: symbol
        required: false
        type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/TickerStatistics'
        '400':
          description: 'Bad Request'
          schema:
            $ref: "#/definitions/Error"
        '404':
          description: 'Not Found'
        default:
          description: Generic error response
          schema:
            $ref: "#/definitions/Error"
      deprecated: false
  /api/v1/trades:
    get:
      tags:
      - trade
      summary: Get market trades.
      description: |
        Gets a list of historical trades.

        **Rate Limit:** 5 requests per IP per second.
      operationId: getTrades
      produces:
      - application/json
      parameters:
      - name: address
        in: query
        description: the buyer/seller address
        required: false
        type: string
        allowEmptyValue: false
      - name: buyerOrderId
        in: query
        description: buyer order id
        required: false
        type: string
        allowEmptyValue: false
      - name: end
        in: query
        description: end time
        required: false
        type: integer
        format: int64
        allowEmptyValue: false
      - name: height
        in: query
        description: block height
        required: false
        type: integer
        format: int64
        allowEmptyValue: false
      - name: limit
        in: query
        description: default 500; max 1000.
        required: false
        type: integer
        default: 500
        format: int32
        allowEmptyValue: false
      - name: offset
        in: query
        description: start with 0; default 0.
        required: false
        type: integer
        default: 0
        format: int32
        allowEmptyValue: false
      - name: quoteAsset
        in: query
        description: quote asset
        required: false
        type: string
        allowEmptyValue: false
      - name: sellerOrderId
        in: query
        description: seller order id
        required: false
        type: string
        allowEmptyValue: false
      - name: side
        in: query
        description: order side. 1 for buy and 2 for sell.
        required: false
        type: integer
        format: int32
        allowEmptyValue: false
        enum:
        - BUY
        - SELL
      - name: start
        in: query
        description: start time; The maximum start - end query window is 3 months; Default query window is latest 7 days.
        required: false
        type: integer
        format: int64
        allowEmptyValue: false
      - name: symbol
        in: query
        description: symbol
        required: false
        type: string
      - name: total
        in: query
        description: 'total number required, 0 for not required and 1 for required; default not required, return total=-1 in response'
        required: false
        type: integer
        format: int32
        allowEmptyValue: false
        enum:
        - 0
        - 1
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/TradePage'
        '400':
          description: 'Bad Request'
          schema:
            $ref: "#/definitions/Error"
        '404':
          description: 'Not Found'
        default:
          description: Generic error response
          schema:
            $ref: "#/definitions/Error"
      deprecated: false
  /api/v1/transactions:
    get:
      tags:
      - transaction
      summary: Get transactions.
      description: |
        Gets a list of transactions.

        **Rate Limit:** 60 requests per IP per minute.
      operationId: txns
      produces:
      - application/json
      parameters:
      - name: address
        in: query
        description: address
        required: true
        type: string
      - name: blockHeight
        in: query
        description: blockHeight
        required: false
        type: integer
        format: int64
      - name: endTime
        in: query
        description: endTime
        required: false
        type: integer
        format: int64
      - name: limit
        in: query
        description: limit
        required: false
        type: integer
        default: 500
        format: int32
      - name: offset
        in: query
        description: offset
        required: false
        type: integer
        default: 0
        format: int32
      - name: side
        in: query
        description: "transaction side. Allowed value: [ RECEIVE, SEND]"
        required: false
        type: string
        allowEmptyValue: false
        enum:
        - RECEIVE
        - SEND
      - name: startTime
        in: query
        description: start time; The maximum start - end query window is 3 months; Default query window is latest 24 hours.
        required: false
        type: integer
        format: int64
      - name: txAsset
        in: query
        description: txAsset
        required: false
        type: string
      - name: txType
        in: query
        description: "transaction type. Allowed value: [ NEW_ORDER,ISSUE_TOKEN,BURN_TOKEN,LIST_TOKEN,CANCEL_ORDER,FREEZE_TOKEN,UN_FREEZE_TOKEN,TRANSFER,PROPOSAL,VOTE]"
        required: false
        type: string
        allowEmptyValue: false
        enum:
        - NEW_ORDER
        - ISSUE_TOKEN
        - BURN_TOKEN
        - LIST_TOKEN
        - CANCEL_ORDER
        - FREEZE_TOKEN
        - UN_FREEZE_TOKEN
        - TRANSFER
        - PROPOSAL
        - VOTE
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/TxPage'
        '400':
          description: 'Bad Request'
          schema:
            $ref: "#/definitions/Error"
        '404':
          description: 'Not Found'
        default:
          description: Generic error response
          schema:
            $ref: "#/definitions/Error"
      deprecated: false
definitions:
  Error:
    type: object
    required:
    - message
    properties:
      code:
        type: integer
        format: int64
        required: true
      message:
        type: string
        required: true
  Times:
    type: object
    title: Times
    properties:
      ap_time: {type: string, description: e.g. 2019-01-21T10:30:00Z}
      block_time: {type: string, description: format as above}
  Validator:
    type: object
    properties:
      block_height:
        type: integer
        description: 'Current block height'
        format: int64
        required: true
      validators:
        type: array
        required: true
        items:
          properties:
            address:
              type: string
              description: Address
              format: hexaddress
              required: true
            pub_key:
              type: array
              title: 'Public key'
              description: 'Public key bytes'
              required: true
              items:
                type: integer
                format: int32
            voting_power:
              type: integer
              required: true
            accum:
              type: integer
              required: true
  Peer:
    type: object
    properties:
      id:
        type: string
        description: 'Authenticated identifier'
        required: true
      original_listen_addr:
        type: string
        description: 'Original listen address before PeersService changed it'
        format: RemoteAddr
        required: true
      listen_addr:
        type: string
        description: 'Listen address'
        format: RemoteAddr
        required: true
      access_addr:
        type: string
        description: 'Access address (HTTP)'
        format: RemoteAddr
        required: true
      stream_addr:
        type: string
        description: 'Stream address (WS)'
        format: RemoteAddr
        required: true
      network:
        type: string
        description: 'Chain ID'
        required: true
      version:
        type: string
        description: 'Version'
        required: true
      moniker:
        type: string
        description: 'Moniker (Name)'
        required: true
      capabilities:
        type: array
        description: "Array of capability tags: node, qs, ap, ws"
        example: ["node", "ap"]
        items:
          type: string
          enum: ['node', 'qs', 'ap', 'ws']
        required: true
      accelerated:
        type: boolean
        description: 'Is an accelerated path to a validator node'
  Transaction:
    type: object
    properties:
      hash:
        type: string
        title: Hash
        description: 'Hash of transaction'
      log:
        title: Log
        type: string
        description: 'Log of transaction'
      data:
        title: Data
        type: string
        description: 'Data of transaction'
      tx:
        title: Tx
        type: object
        description: |
          Detail of transaction, like transaction type, messages and signature

          For example, below is the detail of a send transaction. Most of the fields are fixed, but the detail of msg
          varies with msg type.

          ```
          {
              "type": "auth/StdTx", // fixed, type of transaction
              "value": {            // fixed, detail of the transaction
                  "data": null,     // fixed, data of the transaction
                  "memo": "",       // fixed, memo
                  "msg": [          // fixed, msgs of the transaction
                      {
                          "type": "cosmos-sdk/Send",  // vary with msg type
                          "value": {                  // value content vary with mst type
                              "inputs": [
                                  {
                                      "address": "bnb1vt4zwu5hy7tyryktud6mpcu8h2ehh6xw66gzwp",
                                      "coins": [
                                          {
                                              "amount": "100000000000000",
                                              "denom": "BNB"
                                          }
                                      ]
                                  }
                              ],
                              "outputs": [
                                  {
                                      "address": "bnb1kg8mh20tndur9d9rry4wjunhpfzcud30qzf0qv",
                                      "coins": [
                                          {
                                              "amount": "100000000000000",
                                              "denom": "BNB"
                                          }
                                      ]
                                  }
                              ]
                          }
                      }
                  ],
                  "signatures": [ // fixed, signatures of the transaction
                      {
                          "account_number": "0",
                          "pub_key": {
                              "type": "tendermint/PubKeySecp256k1",
                              "value": "AoWY3eWBOnnvLPTz4RsUlX1pWCkLLPewu1vAAoTEzxzR"
                          },
                          "sequence": "1",
                          "signature": "6O2TQAgleFNPw4zIWBLaNvOf5dR7DHNSr2DwAPeFK6lokRqZd2KR2BD+WlmaWj4LdLo5N+utN1JtY41E91N0uw=="
                      }
                  ],
                  "source": "0"  // fixed, source of the transaction
              }
          }
          ```
      height:
        title: Height
        type: string
        description: 'Height of transaction'
      code:
        title: Code
        type: integer
        format: int32
        default: 0
        description: 'Result code of transaction'
      ok:
        type: boolean
  Account:
    type: object
    properties:
      account_number:
        type: integer
        title: 'Account number'
        format: int32
        required: true
      address:
        type: string
        title: Address
        format: address
        required: true
      balances:
        type: array
        title: Balances
        items:
          $ref: '#/definitions/Balance'
        required: true
      public_key:
        type: array
        title: 'Public key'
        description: 'Public key bytes'
        items:
          type: integer
        required: true
      sequence:
        type: integer
        title: Sequence
        format: int64
        required: true
  AccountSequence:
    type: object
    properties:
      sequence:
        type: integer
        title: Sequence
        format: int64
        required: true
  Balance:
    type: object
    properties:
      symbol: {type: string, example: BNB, format: currency}
      free: {type: string, title: Free, description: "In decimal form, e.g. 0.00000000", example: "0.00000000", format: fixed8}
      locked: {type: string, title: Locked, description: "In decimal form, e.g. 0.00000000", example: "0.00000000", format: fixed8}
      frozen: {type: string, title: Frozen, description: "In decimal form, e.g. 0.00000000", example: "0.00000000", format: fixed8}
  Token:
    type: object
    properties:
      name:
        type: string
        example: Binance Chain Native Token
        required: true
      symbol:
        type: string
        example: BTC-000
        required: true
      original_symbol:
        type: string
        example: BTC
        required: true
      total_supply:
        type: string
        description: "In decimal form, e.g. 1.00000000"
        example: "0.00000000"
        format: fixed8
        required: true
      owner:
        type: string
        description: Address
        format: address
        required: true
  Market:
    type: object
    properties:
      base_asset_symbol:
        type: string
        example: BNB
        format: currency
        required: true
      quote_asset_symbol:
        type: string
        example: BNB
        format: currency
        required: true
      price:
        type: string
        description: "In decimal form, e.g. 1.00000000"
        example: "0.00000000"
        format: fixed8
        required: true
      tick_size:
        type: string
        description: "In decimal form, e.g. 1.00000000"
        example: "0.00000000"
        format: fixed8
        required: true
      lot_size:
        type: string
        description: "In decimal form, e.g. 1.00000000"
        example: "0.00000000"
        format: fixed8
        required: true
  Fee:
    type: object
    properties:
      msg_type:
        type: string
        description: Transaction msg type that this fee applies to
        example: submit_proposal
      fee:
        type: number
        description: The fee amount
        example: 1000000000
      fee_for:
        type: integer
        description: 1 = proposer, 2 = all, 3 = free
        example: 1
      multi_transfer_fee:
        type: string
        description: Fee for multi-transfer
        example: "200000"
      lower_limit_as_multi:
        type: string
        description: e.g. 2
        example: "2"
      fixed_fee_params:
        description: Set if the fee is fixed
        $ref: '#/definitions/FixedFeeParams'
  FixedFeeParams:
    type: object
    properties:
      msg_type:
        type: string
        description: Transaction msg type that this fee applies to
        example: submit_proposal
      fee:
        type: number
        description: The fixed fee amount
        example: 1000000000
      fee_for:
        type: integer
        description: 1 = proposer, 2 = all, 3 = free
        example: 1
  MarketDepth:
    type: object
    properties:
      asks:
        type: array
        description: "Price and qty in decimal form, e.g. 1.00000000"
        example: "[\"1.00000000\",\"800.00000000\"]"
        items:
          type: string
          format: fixed8
        minItems: 2
        maxItems: 2
        required: true
      bids:
        type: array
        description: "Price and qty in decimal form, e.g. 1.00000000"
        example: "[\"1.00000000\",\"800.00000000\"]"
        items:
          type: string
          format: fixed8
        minItems: 2
        maxItems: 2
        required: true
  BlockTradePage:
    type: object
    properties:
      blockTrade:
        type: array
        items:
          $ref: '#/definitions/BlockTrade'
        required: true
      total:
        type: integer
        format: int64
        required: true
  BlockTrade:
    type: object
    properties:
      blockTime:
        type: integer
        format: int64
      fee:
        type: string
      height:
        type: integer
        format: int64
      trade:
        type: array
        items:
          $ref: '#/definitions/Trade'
  Candlestick:
    type: object
    properties:
      close:
        type: number
      closeTime:
        type: integer
        format: int64
      high:
        type: number
      low:
        type: number
      numberOfTrades:
        type: integer
        format: int32
      open:
        type: number
      openTime:
        type: integer
        format: int64
      quoteAssetVolume:
        type: number
      volume:
        type: number
  OrderList:
    type: object
    properties:
      order:
        type: array
        items:
          $ref: '#/definitions/Order'
      total:
        type: integer
        format: int64
  Order:
    type: object
    properties:
      cumulateQuantity:
        type: string
      fee:
        type: string
      lastExecutedPrice:
        type: string
      lastExecutedQuantity:
        type: string
      orderCreateTime:
        type: string
        format: date-time
      orderId:
        type: string
      owner:
        type: string
      price:
        type: string
      quantity:
        type: string
      side:
        type: integer
        format: int32
        description: "1 for buy and 2 for sell"
        enum:
        - BUY
        - SELL
      status:
        type: string
        description: "enum [Ack, PartialFill, IocNoFill, FullyFill, Canceled, Expired, FailedBlocking, FailedMatching]"
      symbol:
        type: string
      timeInForce:
        type: integer
        format: int32
        description: "1 for Good Till Expire(GTE) order and 3 for Immediate Or Cancel (IOC)"
        enum:
        - GTE
        - IOC
        - UNKNOWN
      tradeId:
        type: string
      transactionHash:
        type: string
      transactionTime:
        type: string
        format: date-time
      type:
        type: integer
        format: int32
        description: "only 2 is available for now, meaning limit order"
        enum:
        - LIMIT
    title: Order
  TickerStatistics:
    type: object
    properties:
      askPrice:
        type: string
      askQuantity:
        type: string
      bidPrice:
        type: string
      bidQuantity:
        type: string
      closeTime:
        type: integer
        format: int64
      count:
        type: integer
        format: int64
      firstId:
        type: string
      highPrice:
        type: string
      lastId:
        type: string
      lastPrice:
        type: string
      lastQuantity:
        type: string
      lowPrice:
        type: string
      openPrice:
        type: string
      openTime:
        type: integer
        format: int64
      prevClosePrice:
        type: string
      priceChange:
        type: string
      priceChangePercent:
        type: string
      quoteVolume:
        type: string
      symbol:
        type: string
      volume:
        type: string
      weightedAvgPrice:
        type: string
    title: TickerStatistics
  TradePage:
    type: object
    properties:
      total:
        type: integer
        format: int64
      trade:
        type: array
        items:
          $ref: '#/definitions/Trade'
  Trade:
    type: object
    properties:
      baseAsset:
        type: string
      blockHeight:
        type: integer
        format: int64
      buyFee:
        type: string
      buyerId:
        type: string
      buyerOrderId:
        type: string
      price:
        type: string
      quantity:
        type: string
      quoteAsset:
        type: string
      sellFee:
        type: string
      sellerId:
        type: string
      sellerOrderId:
        type: string
      symbol:
        type: string
      time:
        type: integer
        format: int64
      tradeId:
        type: string
  TxPage:
    type: object
    properties:
      total:
        type: integer
        format: int64
      tx:
        type: array
        items:
          $ref: '#/definitions/Tx'
  Tx:
    type: object
    properties:
      blockHeight:
        type: integer
        format: int64
      code:
        type: integer
        format: int32
        example: 0
      confirmBlocks:
        type: integer
        format: int64
      data:
        type: string
      fromAddr:
        type: string
      orderId:
        type: string
      timeStamp:
        type: string
        format: date-time
      toAddr:
        type: string
      txAge:
        type: integer
        format: int64
      txAsset:
        type: string
      txFee:
        type: string
      txHash:
        type: string
      txType:
        type: string
      value:
        type: string
    title: Tx
  ExchangeRate:
    type: object
    additionalProperties:
      type: number
      format: double
