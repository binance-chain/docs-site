swagger: '2.0'
info:
  title: 'Binance Chain Frontier API'
  version: 0.1.0
  description: 'The Binance Chain Frontier API: HTTP endpoints providing access to the Binance Chain validator node network and market data services.'
  termsOfService: 'https://www.binance.com/agreement.html'
  contact:
    name: 'Binance Support'
    email: 'support@binance.com'
    url: 'https://support.binance.com'
  license:
    name: 'Apache 2.0'
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
basePath: /
schemes:
- https
# - wss
produces:
- application/json
tags:
-
  name: info
  description: 'Access to runtime metadata'
-
  name: account
  description: 'Access to an individual user''s trading activity'
-
  name: tx
  description: 'Access to transactions metadata'
-
  name: tokens
  description: 'Access to tokens metadata'
-
  name: market
  description: 'Access to DEX market data'
-
  name: order
  description: 'Access to historical orders'
-
  name: trade
  description: 'Access to historical trading activity'
-
  name: userdata
  description: 'Access to an individual user''s trading activity'
-
  name: node
  description: 'Access to the node RPC functions'
-
  name: frontier
  description: 'Access to the frontier services'
-
  name: misc
  description: Others
paths:
  /api/v1/time:
    get:
      tags:
      - misc
      summary: Get Block Time
      description: Gets the latest block time and the current time according to the HTTP service.
      operationId: getTime
      produces:
      - application/json
      responses:
        '200':
          description: Success
          schema:
            type: object
            title: Times
            properties:
              ap_time: {type: string}
              block_time: {type: string}
        '400':
          description: 'Bad Request'
          schema:
            $ref: "#/definitions/Error"
        '404':
          description: 'Not Found'
        default:
          description: Generic error response
          schema:
            $ref: "#/definitions/Error"
  /api/v1/node-info:
    get:
      summary: Get Node Information
      description: Gets runtime information about the node.
      operationId: getNodeInfo
      produces:
      - application/json
      tags:
      - info
      - node
      responses:
        '200':
          description: Success
          schema:
            type: object
            title: 'Node info'
            description: 'Represents block height, current timestamp and the number of connected peers.'
  /api/v1/validators:
    get:
      summary: Get Validators
      description: Gets the list of consensus validators.
      operationId: getValidators
      produces:
      - application/json
      tags:
      - info
      - node
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Validators'
        '400':
          description: 'Bad Request'
          schema:
            $ref: "#/definitions/Error"
        '404':
          description: 'Not Found'
        default:
          description: Generic error response
          schema:
            $ref: "#/definitions/Error"
  /api/v1/peers:
    get:
      summary: Get Peers
      description: Gets the list of network peers.
      operationId: getPeers
      produces:
      - application/json
      tags:
      - info
      - node
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Peers'
        '400':
          description: 'Bad Request'
          schema:
            $ref: "#/definitions/Error"
        '404':
          description: 'Not Found'
        default:
          description: Generic error response
          schema:
            $ref: "#/definitions/Error"
  /api/v1/frontier-info:
    get:
      summary: Get Frontier Information
      description: Gets runtime information about the frontier services.
      operationId: getFrontierInfo
      produces:
      - application/json
      tags:
      - info
      - frontier
      responses:
        '200':
          description: Success
          schema:
            type: object
            title: 'Frontier info'
            description: 'Represents the current server time and sync state.'
            properties:
              time:
                type: integer
                title: 'The current server time'
                description: 'In unix time (the number of seconds since the Unix Epoch)'
                format: int64
  /api/v1/account/{address}:
    get:
      summary: Get Account
      description: Gets account metadata for an address.
      operationId: getAccount
      produces:
      - application/json
      tags:
      - node
      - account
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Account'
        '400':
          description: 'Bad Request'
          schema:
            $ref: "#/definitions/Error"
        '404':
          description: 'Not Found'
        default:
          description: Generic error response
          schema:
            $ref: "#/definitions/Error"
      parameters:
      -
        name: address
        in: path
        description: 'The account address to query'
        required: true
        type: string
  /api/v1/account/{address}/sequence:
    get:
      summary: Get Account Sequence
      description: Gets an account sequence for an address.
      operationId: getAccountSequence
      produces:
      - application/json
      tags:
      - node
      - account
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/AccountSequence'
        '400':
          description: 'Bad Request'
          schema:
            $ref: "#/definitions/Error"
        '404':
          description: 'Not Found'
        default:
          description: Generic error response
          schema:
            $ref: "#/definitions/Error"
      parameters:
      -
        name: address
        in: path
        description: 'The account address to query'
        required: true
        type: string
  /api/v1/tx/{hash}:
    get:
      summary: Get Transaction
      description: Gets transaction metadata by transaction ID.
      operationId: getTransaction
      produces:
      - application/json
      tags:
      - node
      - tx
      parameters:
      -
        name: hash
        in: path
        description: 'The transaction hash to query'
        required: true
        type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Transaction'
        '400':
          description: 'Bad Request'
          schema:
            $ref: "#/definitions/Error"
        '404':
          description: 'Not Found'
        default:
          description: Generic error response
          schema:
            $ref: "#/definitions/Error"
  /api/v1/tokens:
    get:
      tags:
      - tokens
      summary: Get Tokens
      description: Gets a list of tokens that have been issued.
      operationId: getTokens
      produces:
      - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Tokens'
        '400':
          description: 'Bad Request'
          schema:
            $ref: "#/definitions/Error"
        '404':
          description: 'Not Found'
        default:
          description: Generic error response
          schema:
            $ref: "#/definitions/Error"
  /api/v1/markets:
    get:
      tags:
      - market
      summary: Get Market Pairs
      description: Gets the list of market pairs that have been listed.
      operationId: getPairs
      produces:
      - application/json
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Markets'
        '400':
          description: 'Bad Request'
          schema:
            $ref: "#/definitions/Error"
        '404':
          description: 'Not Found'
        default:
          description: Generic error response
          schema:
            $ref: "#/definitions/Error"
  /api/v1/depth:
    get:
      tags:
      - market
      summary: Get Order Depth Data
      description: Gets the order book depth data for a given pair symbol.
      operationId: getDepth
      produces:
      - application/json
      parameters:
      -
        in: query
        name: symbol
        description: symbol
        required: false
        type: string
      -
        in: query
        name: limit
        description: symbol
        required: false
        type: integer
        format: int32
      responses:
        '200':
          description: Success
        '400':
          description: 'Bad Request'
          schema:
            $ref: "#/definitions/Error"
        '404':
          description: 'Not Found'
        default:
          description: Generic error response
          schema:
            $ref: "#/definitions/Error"
  /api/v1/broadcast:
    post:
      tags:
      - node
      operationId: broadcastTx
      summary: Post Transaction to Broadcast
      description: Broadcasts a signed transaction. A single transaction must be sent in hex format in plain text.
      consumes:
      - text/plain
      produces:
      - application/json
      schemes:
      - https
      parameters:
      - in: query
        name: sync
        description: Synchronous broadcast (wait for DeliverTx)
        required: false
        type: boolean
        default: false
      - in: body
        name: body
        required: true
        schema:
          type: string
          format: binary
          minLength: 1
          maxLength: 100000
      responses:
        '200':
          description: Success
          schema:
            type: array
            items:
              properties:
                ok:
                  type: boolean
                code:
                  type: integer
                  format: int32
                data:
                  type: string
                log:
                  type: string
                hash:
                  type: string
                  title: Hash
        '400':
          description: 'Bad Request'
          schema:
            $ref: "#/definitions/Error"
        '404':
          description: 'Not Found'
        default:
          description: Generic error response
          schema:
            $ref: "#/definitions/Error"
  /api/query/trades-statistics:
    get:
      tags:
      - explorer
      summary: Get Trade Statistics
      description: Gets statistics about market trades for a given pair symbol.
      operationId: getTradeStatisticsDTOUsingGET
      produces:
      - application/json
      parameters:
      - name: symbol
        in: query
        description: symbol
        required: true
        type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/TradeStatisticsDTO'
        '400':
          description: 'Bad Request'
          schema:
            $ref: "#/definitions/Error"
        '404':
          description: 'Not Found'
        default:
          description: Generic error response
          schema:
            $ref: "#/definitions/Error"
      deprecated: false
  /api/v1/block-trades:
    get:
      tags:
      - trade
      summary: Get Trades in Block
      description: Gets historical trades per block. Sorted by block height in descending order.
      operationId: getBlockTradesUsingGET
      produces:
      - application/json
      parameters:
      - name: address
        in: query
        description: the sender address
        required: false
        type: string
        allowEmptyValue: false
      - name: end
        in: query
        description: end time
        required: false
        type: integer
        format: int64
        allowEmptyValue: false
      - name: height
        in: query
        description: block height
        required: false
        type: integer
        format: int64
        allowEmptyValue: false
      - name: limit
        in: query
        description: default 50; max 100.
        required: false
        type: integer
        default: 50
        format: int32
        allowEmptyValue: false
      - name: offset
        in: query
        description: start with 0; default 0.
        required: false
        type: integer
        default: 0
        format: int32
        allowEmptyValue: false
      - name: start
        in: query
        description: start time
        required: false
        type: integer
        format: int64
        allowEmptyValue: false
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/BlockTradePageVo'
        '400':
          description: 'Bad Request'
          schema:
            $ref: "#/definitions/Error"
        '404':
          description: 'Not Found'
        default:
          description: Generic error response
          schema:
            $ref: "#/definitions/Error"
      deprecated: false
  /api/v1/crypto-currency:
    get:
      tags:
      - market
      summary: Get Currency Exchange Rate
      description: Gets exchange rates for tokens on Binance DEX. The rate is updated every 30 seconds.
      operationId: getCryptoCurrencyRateUsingGET
      produces:
      - application/json
      responses:
        '200':
          description: OK
          schema:
            type: object
            additionalProperties:
              type: number
              format: double
        '400':
          description: 'Bad Request'
          schema:
            $ref: "#/definitions/Error"
        '404':
          description: 'Not Found'
        default:
          description: Generic error response
          schema:
            $ref: "#/definitions/Error"
      deprecated: false
  /api/v1/fiat-currency:
    get:
      tags:
      - market
      summary: Get Fiat Exchange Rate
      description: Gets exchange rates of fiat currency to crypto currency. The rate is updated every 5 minutes.
      operationId: getFiatCurrencyRateUsingGET
      produces:
      - application/json
      responses:
        '200':
          description: OK
          schema:
            type: object
            additionalProperties:
              type: number
              format: double
        '400':
          description: 'Bad Request'
          schema:
            $ref: "#/definitions/Error"
        '404':
          description: 'Not Found'
        default:
          description: Generic error response
          schema:
            $ref: "#/definitions/Error"
      deprecated: false
  /api/v1/klines:
    get:
      tags:
      - market
      summary: Get Candlestick Bars
      description: Gets candlestick/kline bars for a symbol. Bars are uniquely identified by their open time.
      operationId: getCandlestickBarsUsingGET
      produces:
      - application/json
      parameters:
      - name: symbol
        in: query
        description: symbol
        required: true
        type: string
      - name: interval
        in: query
        description: interval
        required: true
        type: string
        allowEmptyValue: false
        enum:
        - 1m
        - 3m
        - 5m
        - 15m
        - 30m
        - 1h
        - 2h
        - 4h
        - 6h
        - 8h
        - 12h
        - 1d
        - 3d
        - 1w
        - 1M
      - name: limit
        in: query
        description: default 500; max 1000.
        required: false
        type: integer
        format: int32
        allowEmptyValue: false
      - name: startTime
        in: query
        description: start time
        required: false
        type: integer
        format: int64
        allowEmptyValue: false
      - name: endTime
        in: query
        description: end time
        required: false
        type: integer
        format: int64
        allowEmptyValue: false
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              type: object
            example: ' [[

                              1499040000000,      // Open time

                              "0.01634790",       // Open

                              "0.80000000",       // High

                              "0.01575800",       // Low

                              "0.01577100",       // Close

                              "148976.11427815",  // Volume

                              1499644799999,      // Close time

                              "2434.19055334",    // Quote asset volume

                              308                // Number of trades

                      ]] '
      deprecated: false
  /api/v1/orders/closed:
    get:
      tags:
      - order
      summary: Get Closed Orders
      description: Gets closed (filled and cancelled) orders for a given address.
      operationId: getClosedOrdersUsingGET
      produces:
      - application/json
      parameters:
      - name: address
        in: query
        description: the sender address
        required: true
        type: string
        allowEmptyValue: false
      - name: end
        in: query
        description: end time
        required: false
        type: integer
        format: int64
        allowEmptyValue: false
      - name: limit
        in: query
        description: default 500; max 1000.
        required: false
        type: integer
        default: 500
        format: int32
        allowEmptyValue: false
      - name: offset
        in: query
        description: start with 0; default 0.
        required: false
        type: integer
        default: 0
        format: int32
        allowEmptyValue: false
      - name: side
        in: query
        description: order side
        required: false
        type: string
        allowEmptyValue: false
        enum:
        - BUY
        - SELL
      - name: start
        in: query
        description: start time
        required: false
        type: integer
        format: int64
        allowEmptyValue: false
      - name: status
        in: query
        description: order status list
        required: false
        type: array
        items:
          type: string
        collectionFormat: multi
        allowEmptyValue: false
      - name: symbol
        in: query
        description: symbol
        required: false
        type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OrderPageVo'
      deprecated: false
  /api/v1/orders/open:
    get:
      tags:
      - order
      summary: Get Open Orders
      description: Gets open orders for a given address.
      operationId: getOpenOrdersUsingGET
      produces:
      - application/json
      parameters:
      - name: address
        in: query
        description: the sender address
        required: true
        type: string
        allowEmptyValue: false
      - name: limit
        in: query
        description: default 500; max 1000.
        required: false
        type: integer
        default: 500
        format: int32
        allowEmptyValue: false
      - name: offset
        in: query
        description: start with 0; default 0.
        required: false
        type: integer
        default: 0
        format: int32
        allowEmptyValue: false
      - name: symbol
        in: query
        description: symbol
        required: false
        type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OrderPageVo'
        '400':
          description: 'Bad Request'
          schema:
            $ref: "#/definitions/Error"
        '404':
          description: 'Not Found'
        default:
          description: Generic error response
          schema:
            $ref: "#/definitions/Error"
      deprecated: false
  /api/v1/orders/{id}:
    get:
      tags:
      - order
      summary: Get Order
      description: Gets metadata for an individual order.
      operationId: getOrderUsingGET
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        description: order id
        required: true
        type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OrderVo'
        '400':
          description: 'Bad Request'
          schema:
            $ref: "#/definitions/Error"
        '404':
          description: 'Not Found'
        default:
          description: Generic error response
          schema:
            $ref: "#/definitions/Error"
      deprecated: false
  /api/v1/ticker/24hr:
    get:
      tags:
      - market
      summary: Get Ticker
      description: Gets 24 hour price change statistics for a market pair symbol.
      operationId: get24HrPriceStatisticsUsingGET
      produces:
      - application/json
      parameters:
      - name: symbol
        in: query
        description: symbol
        required: false
        type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/TickerStatisticsVo'
        '400':
          description: 'Bad Request'
          schema:
            $ref: "#/definitions/Error"
        '404':
          description: 'Not Found'
        default:
          description: Generic error response
          schema:
            $ref: "#/definitions/Error"
      deprecated: false
  /api/v1/trades:
    get:
      tags:
      - trade
      summary: Get Trades
      description: Gets a list of historical trades.
      operationId: getTradesUsingGET
      produces:
      - application/json
      parameters:
      - name: address
        in: query
        description: the sender address
        required: false
        type: string
        allowEmptyValue: false
      - name: baseAsset
        in: query
        description: base asset
        required: false
        type: string
        allowEmptyValue: false
      - name: buyerOrderId
        in: query
        description: buyer order id
        required: false
        type: string
        allowEmptyValue: false
      - name: end
        in: query
        description: end time
        required: false
        type: integer
        format: int64
        allowEmptyValue: false
      - name: height
        in: query
        description: block height
        required: false
        type: integer
        format: int64
        allowEmptyValue: false
      - name: limit
        in: query
        description: default 500; max 1000.
        required: false
        type: integer
        default: 500
        format: int32
        allowEmptyValue: false
      - name: offset
        in: query
        description: start with 0; default 0.
        required: false
        type: integer
        default: 0
        format: int32
        allowEmptyValue: false
      - name: quoteAsset
        in: query
        description: quote asset
        required: false
        type: string
        allowEmptyValue: false
      - name: sellerOrderId
        in: query
        description: seller order id
        required: false
        type: string
        allowEmptyValue: false
      - name: side
        in: query
        description: order side
        required: false
        type: string
        allowEmptyValue: false
        enum:
        - BUY
        - SELL
      - name: start
        in: query
        description: start time
        required: false
        type: integer
        format: int64
        allowEmptyValue: false
      - name: symbol
        in: query
        description: symbol
        required: false
        type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/TradePageVo'
        '400':
          description: 'Bad Request'
          schema:
            $ref: "#/definitions/Error"
        '404':
          description: 'Not Found'
        default:
          description: Generic error response
          schema:
            $ref: "#/definitions/Error"
      deprecated: false
  /api/v1/transactions:
    get:
      tags:
      - transaction
      summary: Get Transactions
      description: Gets a list of transactions.
      operationId: txnsUsingGET
      produces:
      - application/json
      parameters:
      - name: address
        in: query
        description: address
        required: false
        type: string
      - name: blockHeight
        in: query
        description: blockHeight
        required: false
        type: integer
        format: int64
      - name: endTime
        in: query
        description: endTime
        required: false
        type: integer
        format: int64
      - name: limit
        in: query
        description: limit
        required: false
        type: integer
        default: 500
        format: int32
      - name: offset
        in: query
        description: offset
        required: false
        type: integer
        default: 0
        format: int32
      - name: side
        in: query
        description: transaction side
        required: false
        type: string
        allowEmptyValue: false
        enum:
        - RECEIVE
        - SEND
      - name: startTime
        in: query
        description: startTime
        required: false
        type: integer
        format: int64
      - name: txAsset
        in: query
        description: txAsset
        required: false
        type: string
      - name: txType
        in: query
        description: transaction type
        required: false
        type: string
        allowEmptyValue: false
        enum:
        - NEW_ORDER
        - ISSUE_TOKEN
        - BURN_TOKEN
        - LIST_TOKEN
        - CANCEL_ORDER
        - FREEZE_TOKEN
        - UN_FREEZE_TOKEN
        - TRANSFER
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/TxPageVo'
        '400':
          description: 'Bad Request'
          schema:
            $ref: "#/definitions/Error"
        '404':
          description: 'Not Found'
        default:
          description: Generic error response
          schema:
            $ref: "#/definitions/Error"
      deprecated: false
definitions:
  Error:
    type: object
    required:
    - message
    properties:
      code:
        type: integer
        format: int64
      message:
        type: string
  Validators:
    type: object
    properties:
      block_height:
        type: integer
        description: 'Current block height'
        format: int64
      validators:
        type: array
        items:
          properties:
            address:
              type: string
              description: Address
              format: hexaddress
            pub_key:
              type: array
              title: 'Public key'
              description: 'Public key bytes'
              items:
                type: integer
                format: int32
            voting_power:
              type: integer
            accum:
              type: integer
  Peers:
    type: array
    items:
      properties:
        id:
          type: string
          description: 'Authenticated identifier'
        original_listen_addr:
          type: string
          description: 'Original listen address before PeersService changed it'
          format: RemoteAddr
        listen_addr:
          type: string
          description: 'Listen address'
          format: RemoteAddr
        access_addr:
          type: string
          description: 'Access address (HTTP)'
          format: RemoteAddr
        stream_addr:
          type: string
          description: 'Stream address (WS)'
          format: RemoteAddr
        network:
          type: string
          description: 'Chain ID'
        version:
          type: string
          description: 'Version'
        moniker:
          type: string
          description: 'Moniker (Name)'
        capabilities:
          type: array
          items:
            type: string
            enum: ['node', 'qs', 'ap', 'ws']
        accelerated:
          type: boolean
          description: 'Is an accelerated path to a validator node'
  Transaction:
    type: object
    properties:
      hash:
        type: string
        title: Hash
      log:
        title: Log
        type: string
      data:
        title: Data
        type: string
      code:
        title: Code
        type: integer
        format: int32
        default: 0
  Account:
    type: object
    properties:
      account_number:
        type: integer
        title: 'Account number'
        format: int32
      address:
        type: string
        title: Address
        format: address
      balances:
        type: array
        title: Balances
        items:
          properties:
            symbol: {type: string, example: BNB, format: currency}
            free: {type: string, title: Free, description: "In decimal form, e.g. 0.00000000", example: "0.00000000", format: fixed8}
            locked: {type: string, title: Locked, description: "In decimal form, e.g. 0.00000000", example: "0.00000000", format: fixed8}
            frozen: {type: string, title: Frozen, description: "In decimal form, e.g. 0.00000000", example: "0.00000000", format: fixed8}
      public_key:
        type: array
        title: 'Public key'
        description: 'Public key bytes'
        items:
          type: integer
      sequence:
        type: integer
        title: Sequence
        format: int64
  AccountSequence:
    type: object
    properties:
      sequence:
        type: integer
        title: Sequence
        format: int64
  Tokens:
    type: array
    items:
      properties:
        name:
          type: string
          example: Binance Chain Native Token
        symbol:
          type: string
          example: BTC-000
        original_symbol:
          type: string
          example: BTC
        total_supply:
          type: string
          description: "In decimal form, e.g. 1.00000000"
          example: "0.00000000"
          format: fixed8
        owner:
          type: string
          description: Address
          format: address
  Markets:
    type: array
    items:
      properties:
        base_asset_symbol:
          type: string
          example: BNB
          format: currency
        quote_asset_symbol:
          type: string
          example: BNB
          format: currency
        price:
          type: string
          description: "In decimal form, e.g. 1.00000000"
          example: "0.00000000"
          format: fixed8
        tick_size:
          type: string
          description: "In decimal form, e.g. 1.00000000"
          example: "0.00000000"
          format: fixed8
        lot_size:
          type: string
          description: "In decimal form, e.g. 1.00000000"
          example: "0.00000000"
          format: fixed8
  BlockTradePageVo:
    type: object
    properties:
      blockTrade:
        type: array
        items:
          $ref: '#/definitions/BlockTradeVo'
      total:
        type: string
    title: BlockTradePageVo
  BlockTradeVo:
    type: object
    properties:
      blockTime:
        type: integer
        format: int64
      fee:
        type: string
      height:
        type: integer
        format: int64
      trade:
        type: array
        items:
          $ref: '#/definitions/TradeVo'
    title: BlockTradeVo
  CandlestickVo:
    type: object
    properties:
      close:
        type: number
      closeTime:
        type: integer
        format: int64
      high:
        type: number
      low:
        type: number
      numberOfTrades:
        type: integer
        format: int32
      open:
        type: number
      openTime:
        type: integer
        format: int64
      quoteAssetVolume:
        type: number
      volume:
        type: number
    title: CandlestickVo
  OrderHistoryDTO:
    type: object
    properties:
      blockTime:
        type: string
        format: date-time
      cumulateQuantity:
        type: number
      executionType:
        type: string
        enum:
        - NEW
      fee:
        type: string
      initBlockHeight:
        type: integer
        format: int64
      lastExecutedPrice:
        type: number
      lastExecutedQuantity:
        type: number
      orderCreateTime:
        type: string
        format: date-time
      orderId:
        type: string
      owner:
        type: string
      price:
        type: number
      quantity:
        type: number
      side:
        type: string
        enum:
        - BUY
        - SELL
      status:
        type: string
        enum:
        - ACK
        - PARTIALLY_FILLED
        - IOC_NO_FILL
        - FULLY_FILLED
        - CANCELED
        - EXPIRED
        - FAIL_BLOCKING
        - FAIL_MATCH
        - UNKNOWN
      symbol:
        type: string
      timeInForce:
        type: string
        enum:
        - GTC
        - IOC
        - UNKNOWN
      tradeId:
        type: string
      transactionHash:
        type: string
      transactionTime:
        type: string
        format: date-time
      type:
        type: string
        enum:
        - LIMIT
      updateBlockHeight:
        type: integer
        format: int64
    title: OrderHistoryDTO
  OrderPageDTO:
    type: object
    properties:
      order:
        type: array
        items:
          $ref: '#/definitions/OrderHistoryDTO'
      total:
        type: string
    title: OrderPageDTO
  OrderPageVo:
    type: object
    properties:
      order:
        type: array
        items:
          $ref: '#/definitions/OrderVo'
      total:
        type: string
    title: OrderPageVo
  OrderVo:
    type: object
    properties:
      cumulateQuantity:
        type: number
      fee:
        type: string
      lastExecutedPrice:
        type: number
      lastExecutedQuantity:
        type: number
      orderCreateTime:
        type: string
        format: date-time
      orderId:
        type: string
      owner:
        type: string
      price:
        type: number
      quantity:
        type: number
      side:
        type: string
        enum:
        - BUY
        - SELL
      status:
        type: string
        enum:
        - ACK
        - PARTIALLY_FILLED
        - IOC_NO_FILL
        - FULLY_FILLED
        - CANCELED
        - EXPIRED
        - FAIL_BLOCKING
        - FAIL_MATCH
        - UNKNOWN
      symbol:
        type: string
      timeInForce:
        type: string
        enum:
        - GTC
        - IOC
        - UNKNOWN
      tradeId:
        type: string
      transactionHash:
        type: string
      transactionTime:
        type: string
        format: date-time
      type:
        type: string
        enum:
        - LIMIT
    title: OrderVo
  TickerStatisticsVo:
    type: object
    properties:
      askPrice:
        type: string
      askQuantity:
        type: string
      bidPrice:
        type: string
      bidQuantity:
        type: string
      closeTime:
        type: integer
        format: int64
      count:
        type: integer
        format: int64
      firstId:
        type: string
      highPrice:
        type: string
      lastId:
        type: string
      lastPrice:
        type: string
      lastQuantity:
        type: string
      lowPrice:
        type: string
      openPrice:
        type: string
      openTime:
        type: integer
        format: int64
      prevClosePrice:
        type: string
      priceChange:
        type: string
      priceChangePercent:
        type: string
      quoteVolume:
        type: string
      symbol:
        type: string
      volume:
        type: string
      weightedAvgPrice:
        type: string
    title: TickerStatisticsVo
  TradeDTO:
    type: object
    properties:
      baseAsset:
        type: string
      blockTime:
        type: string
        format: date-time
      buyFee:
        type: string
      buyerId:
        type: string
      buyerOrderId:
        type: string
      initBlockHeight:
        type: integer
        format: int64
      price:
        type: number
      quantity:
        type: number
      quoteAsset:
        type: string
      sellFee:
        type: string
      sellerId:
        type: string
      sellerOrderId:
        type: string
      symbol:
        type: string
      tradeId:
        type: string
    title: TradeDTO
  TradePageVo:
    type: object
    properties:
      total:
        type: string
      trade:
        type: array
        items:
          $ref: '#/definitions/TradeVo'
    title: TradePageVo
  TradeStatisticsDTO:
    type: object
    properties:
      avgPrice:
        type: number
      high:
        type: number
      low:
        type: number
      symbol:
        type: string
      totalBaseVolume:
        type: number
      totalCount:
        type: integer
        format: int64
      totalQuotaVolume:
        type: number
    title: TradeStatisticsDTO
  TradeVo:
    type: object
    properties:
      baseAsset:
        type: string
      blockHeight:
        type: integer
        format: int64
      buyFee:
        type: string
      buyerId:
        type: string
      buyerOrderId:
        type: string
      price:
        type: number
      quantity:
        type: number
      quoteAsset:
        type: string
      sellFee:
        type: string
      sellerId:
        type: string
      sellerOrderId:
        type: string
      symbol:
        type: string
      time:
        type: integer
        format: int64
      tradeId:
        type: string
    title: TradeVo
  TradingFeeDTO:
    type: object
    properties:
      address:
        type: string
      blockHeight:
        type: integer
        format: int64
      fee:
        type: string
      tradingFeeId:
        type: string
    title: TradingFeeDTO
  TxPageVo:
    type: object
    properties:
      total:
        type: string
      tx:
        type: array
        items:
          $ref: '#/definitions/TxVo'
    title: TxPageVo
  TxVo:
    type: object
    properties:
      blockHeight:
        type: integer
        format: int64
      code:
        type: integer
        format: int32
        example: 0
      confirmBlocks:
        type: integer
        format: int64
      data:
        type: string
      fromAddr:
        type: string
      orderId:
        type: string
      timeStamp:
        type: string
        format: date-time
      toAddr:
        type: string
      txAge:
        type: integer
        format: int64
      txAsset:
        type: string
      txFee:
        type: number
      txHash:
        type: string
      txType:
        type: string
      value:
        type: number
    title: TxVo

